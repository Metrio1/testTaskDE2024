@use "@styles/media" as *;
@use "@styles/mixins" as *;

body.lock {
  position: fixed;
  top: var(--scrolledTop, 0);
  width: 100%;
}

body.unlock {
  position: static;
  top: 0;
  width: auto;
}

.input {

  &--invalid {
    border: 2px solid var(--colorDanger);
    outline: none;

    &:focus {
      border-color: var(--colorDangerDark);
    }
  }
}

.textarea {

  &--invalid {
    border: 2px solid var(--colorDanger);
    outline: none;

    &:focus {
      border-color: var(--colorDangerDark);
    }
  }
}

.isValid [data-js-error-msg] {
  display: none;
}

.isInvalid [data-js-error-msg] {
  display: block;
  color: var(--colorDanger);
}

.modalSuccess.isOpen {
  opacity: 1;
}

.modalBackdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  z-index: 999;
  opacity: 0;
  transition: all 0.3s;
  pointer-events: none;

  &.isOpen {
    opacity: 1;
    pointer-events: all;
  }
}

.modal {
  --modalMinWidth: 39.5vw;
  --modalBackround: var(--colorWhite);
  --modalPadding: 3.5rem;
  width: clamp(var(--modalMinWidth), 20vw, 100vw);
  max-height: 98dvh;
  background-color: var(--modalBackround);
  opacity: 0;
  visibility: hidden;
  transform: translate(-50%, -50%);
  position: fixed;
  left: 50%;
  z-index: 1000;
  overflow-y: auto;
  padding: var(--modalPadding);
  border-radius: var(--borderRadius);
  transition: all 0.3s;
  @include desktop {
    --modalMinWidth: 60vw;
  }
  @include tablet {
    padding: 3rem;
    --modalMinWidth: 70vw;
  }
  @include mobile {
    padding: 2rem;
    --modalMinWidth: 80vw;
  }

  &__closeButton {
    @include resetButton;
    top: 3rem;
    right: 3rem;
    position: absolute;
    border-radius: var(--borderRadius);
    width: 3rem;
    height: 3rem;
    cursor: pointer;
    @include hover {
      transform: scale(1.15);
    }

    @include tablet {
      top: 2.4rem;
      right: 2.6rem;
    }
    @include mobile {
      top: 1.43rem;
      right: 1.2rem;
    }

    &::before,
    &::after {
      content: '';
      position: absolute;
      top: 1.38rem;
      right: 0.5rem;
      width: 2rem;
      height: 2px;
      background-color: var(--colorDarkBlue);
      border-radius: var(--borderRadius);
    }

    &::before {
      rotate: 45deg;
    }

    &::after {
      rotate: -45deg;
    }
  }

  &__title {
    margin-bottom: 3rem;
    text-transform: uppercase;
    color: var(--colorDarkBlue);
    @include mobile {
      font-size: 1rem;
      margin-bottom: 1.5rem;
    }
  }

  &__body {
    display: flex;
    flex-direction: column;
  }

  &.isOpen {
    opacity: 1;
    top: 50%;
    visibility: visible;
    transition: var(--transitionEffect);
  }

  &Popup {
    --modalMinWidth: 0;
    top: 0;
    transform: translateX(-50%);
    color: var(--colorWhite);
    padding: 1.25rem 2rem;
    text-align: center;

    @include mobile {
      padding: 1rem;
    }

    &--isSuccess {
      --modalBackround: var(--colorSuccess);
    }

    &--isError {
      --modalBackround: var(--colorDangerDark);
    }

    &.isOpen {
      opacity: 1;
      top: 1rem;
      visibility: visible;
      transition: var(--transitionEffect);
    }
  }
}